<?xml version="1.0" encoding="UTF-8"?>

<HOBOModel
	labelsFromDirectClasses="FALSE"
	labelsFromDirectFields="FALSE"
	queriesEnabled="TRUE">

	<!--
		Specification of disk-based instance store structure.
		Main store directory to be specified sub-directory of
		directory in which this config file is located, with
		instances of specified types stored in specific named
		sub-directories of main store directory.
	-->
	<InstanceDiskStore
		directory="instance-store">
		<SubStore
			directoryName="citizen">
			<InstanceGroup rootType="http://mekon/demo.owl#Citizen"/>
		</SubStore>
		<SubStore
			directoryName="travel">
			<InstanceGroup rootType="http://mekon/demo.owl#Travel"/>
		</SubStore>
	</InstanceDiskStore>

	<!--
		Specification of types of reasoning-related update
		operations to be performed on instance-level frames.
	-->
	<InstanceUpdating
		autoUpdate="TRUE">
		<DefaultOperations
			inferredTypes="TRUE"
			suggestedTypes="TRUE"
			slots="TRUE"
			slotValues="TRUE"/>
	</InstanceUpdating>

	<!--
		Specification of Object Model - will load all classes
		that implement the DObject interface from specified
		package and any sub-packages.

		(Comment out this line to create frames-based model
		derived entirely from the ontology, with no associated
		Object Model.)
	-->
	<DirectModelSection topLevelPackage="uk.ac.manchester.cs.hobo.demo.model"/>

	<!--
		Specification of ontology to be loaded. Can be multiple such
		ontologies of various types. Specified via the plug-in
		class responsible for loading the ontology, plus "custom"
		configuration specific to the particular plug-in.

		Specified plug-in class is OBSectionBuilder which loads OWL
		ontologies via a "sanctioning" mechanism.
	-->
	<ModelSection
		builder="uk.ac.manchester.cs.mekon.owl.build.OBSectionBuilder">

		<!--
			Information concerning location of OWL ontology, type
			of DL reasoner to be used, and special property for
			representing numeric-values (as required by
			OBSectionBuilder and ORClassifier plug-in classes).
		-->
		<OWLModel
			owlFile="demo.owl"
			reasonerFactory="uk.ac.manchester.cs.factplusplus.owlapiv3.FaCTPlusPlusReasonerFactory"
			indirectNumericProperty="http://mekon/demo.owl#numericValue"
			instanceOntology="http://mekon/demo-instances.owl">
		</OWLModel>

		<!-- Reasoner options...
			reasonerFactory="org.semanticweb.owlapi.reasoner.structural.StructuralReasonerFactory"
			reasonerFactory="uk.ac.manchester.cs.factplusplus.owlapiv3.FaCTPlusPlusReasonerFactory"
			reasonerFactory="uk.ac.manchester.cs.jfact.JFactFactory"
			reasonerFactory="org.semanticweb.HermiT.ReasonerFactory"
			reasonerFactory="org.semanticweb.elk.owlapi.ElkReasonerFactory"
			reasonerFactory="com.clarkparsia.pellet.owlapiv3.PelletReasonerFactory"
		-->

		<!--
			Configuration information for ORClassifier and ORMatcher
			plug-in classes that will create OWL expressions
			corresponding to the current states of the instance-level
			frames, which will then be classified in order to update
			the frames, or used to find sets of matching individuals.

			The semantics embodied by the generated expressions can be
			either OPEN_WORLD or CLOSED_WORLD, with exceptions provided
			for specific properties.

			LoggingMode specifies what logging information regarding
			OWL classification or matching operations will be written
			to standard out. Options are expressed via appropriate
			ORLoggingMode enum values (i.e. DISABLED, TIMES_ONLY or
			FULL)
		-->
		<OWLClassifier
			loggingMode="DISABLED">
			<Semantics
				defaultWorld="OPEN">
				<ExceptionProperty uri="http://mekon/demo.owl#job"/>
			</Semantics>
		</OWLClassifier>

		<OWLMatcher
			matcher="uk.ac.manchester.cs.mekon.owl.reason.ORConceptsMatcher"
			reasoningType="DL"
			loggingMode="DISABLED">
			<Semantics
				defaultWorld="OPEN">
				<ExceptionProperty uri="http://mekon/demo.owl#job"/>
			</Semantics>
			<InstancePersistence fileName="demo-owl-instances.owl"/>
		</OWLMatcher>

		<!--
		<OWLMatcher
			matcher="uk.ac.manchester.cs.mekon.owl.reason.ORIndividualsMatcher"
			reasoningType="DL"
			loggingMode="DISABLED">
			<Semantics
				defaultWorld="OPEN">
				<ExceptionProperty uri="http://mekon/demo.owl#job"/>
			</Semantics>
			<InstancePersistence fileName="demo-owl-instances.owl"/>
		</OWLMatcher>
		-->

		<!--
		<OWLMatcher
			matcher="uk.ac.manchester.cs.mekon.owl.stardog.OStardogMatcher"
			database="MEKON-DEMO"
			reasoningType="EL"
			loggingMode="DISABLED">
		</OWLMatcher>
		-->

		<!--
		<OWLMatcher
			matcher="uk.ac.manchester.cs.mekon.owl.jena.OJenaMatcher"
			reasoningType="RDFS"
			loggingMode="DISABLED">
		</OWLMatcher>
		-->

		<!--
			Configuration information for the actual "sanctioning"
			mechanism responsible for loading the OWL ontology into
			the HOBO frames structures.

			Concept hierarchies can be explicitly included, with the
			option to include the root-concept and/or descendant
			concepts of the hierarchy being specified via a an
			appropriate OBEntitySelection enum (see relevant Javadoc).
			If no explicit concept-inclusions are specified then
			all concepts in the ontology will be included. If no
			explicit concept-inclusions are specified then all
			concepts in the ontology will be included.

			Specifications of concept hierarchies can include
			specifications of which concepts are to be defined as
			"hidden". Definitions are expressed via appropriate
			OBEntitySelection and OBConceptHidingFilter enum values
			(see relevant Javadoc).

			Property hierarchies can be explicitly included via
			"PropertyInclusion" constructs, similar to the
			"ConceptInclusion" constructs but with no "hiding"
			definitions. If no explicit property-inclusions are
			specified then all properties in the ontology will be
			included.
		-->
		<OWLSanctionedModel
			defaultSlotSources="RESTRICTIONS_ONLY"
			defaultFrameSlotsPolicy="CFRAME_VALUED_IF_NO_STRUCTURE"
			annotateFramesWithOWLDefinitions="TRUE"
			annotateFramesWithMekonDefinitions="TRUE"
			retainOnlyDeclarationAxioms="FALSE">

			<ConceptInclusion>
				<Group
					rootURI="http://mekon/demo.owl#DemoConcept"
					inclusion="ALL"
					conceptHidingCandidates="ALL"
					conceptHidingFilter="DEFINIED_CONCEPTS_ONLY"/>
			</ConceptInclusion>

			<PropertyInclusion>
				<Group
					rootURI="http://mekon/demo.owl#demoObjectProperty"
					inclusion="NON_ROOTS_ONLY"/>
				<Group
					rootURI="http://mekon/demo.owl#refedInterContentProperty"
					inclusion="ALL"
					frameSources="TRUE"/>
				<Group
					rootURI="http://mekon/demo.owl#demoDataProperty"
					inclusion="NON_ROOTS_ONLY"/>
			</PropertyInclusion>

			<AnnotationInclusion>
				<Include uri="http://mekon/demo.owl#dummyAnnotationProperty"/>
			</AnnotationInclusion>

			<LabelAnnotations>
				<AnnotationProperty uri="http://www.w3.org/2000/01/rdf-schema#label"/>
			</LabelAnnotations>

		</OWLSanctionedModel>

	</ModelSection>

	<!--
		Configuration information for general matcher to be used
		for matching of any instance-level frames whose types are
		not handled by any matchers specified in the section-builder
		configuration section. Multiple general matchers can be
		provided and, where appropriate, should be listed in order
		of precedence.
	<GeneralMatcher
		matcher="uk.ac.manchester.cs.mekon.basex.BaseXMatcher">
		<BaseXMatcher/>
	</GeneralMatcher>
	-->

	<!--
		Mappings between Java classes/fields from the Object Model
		and classes/properties from the ontology.
	-->
	<Mappings>
		<ClassMap
			javaClass="uk.ac.manchester.cs.hobo.demo.model.Citizen"
			externalId="http://mekon/demo.owl#Citizen">
			<FieldMap fieldName="personal" externalId="http://mekon/demo.owl#personal"/>
			<FieldMap fieldName="employment" externalId="http://mekon/demo.owl#employment"/>
			<FieldMap fieldName="tax" externalId="http://mekon/demo.owl#taxPaid"/>
			<FieldMap fieldName="benefits" externalId="http://mekon/demo.owl#benefitReceived"/>
			<FieldMap fieldName="travel" externalId="http://mekon/demo.owl#travel"/>
		</ClassMap>
		<ClassMap
			javaClass="uk.ac.manchester.cs.hobo.demo.model.Personal"
			externalId="http://mekon/demo.owl#Personal">
		</ClassMap>
		<ClassMap
			javaClass="uk.ac.manchester.cs.hobo.demo.model.Employment"
			externalId="http://mekon/demo.owl#Employment">
			<FieldMap fieldName="jobs" externalId="http://mekon/demo.owl#job"/>
			<FieldMap fieldName="jobCount" externalId="http://mekon/demo.owl#jobCount"/>
		</ClassMap>
		<ClassMap
			javaClass="uk.ac.manchester.cs.hobo.demo.model.Job"
			externalId="http://mekon/demo.owl#Job">
			<FieldMap fieldName="hourlyPay" externalId="http://mekon/demo.owl#hourlyPay"/>
			<FieldMap fieldName="weeklyPay" externalId="http://mekon/demo.owl#weeklyPay"/>
			<FieldMap fieldName="hoursPerWeek" externalId="http://mekon/demo.owl#hoursPerWeek"/>
		</ClassMap>
		<ClassMap
			javaClass="uk.ac.manchester.cs.hobo.demo.model.Tax"
			externalId="http://mekon/demo.owl#Tax"/>
		<ClassMap
			javaClass="uk.ac.manchester.cs.hobo.demo.model.StandardTax"
			externalId="http://mekon/demo.owl#StandardTax"/>
		<ClassMap
			javaClass="uk.ac.manchester.cs.hobo.demo.model.SuperTax"
			externalId="http://mekon/demo.owl#SuperTax"/>
		<ClassMap
			javaClass="uk.ac.manchester.cs.hobo.demo.model.Benefit"
			externalId="http://mekon/demo.owl#Benefit"/>
		<ClassMap
			javaClass="uk.ac.manchester.cs.hobo.demo.model.UnemploymentBenefit"
			externalId="http://mekon/demo.owl#UnemploymentBenefit"/>
		<ClassMap
			javaClass="uk.ac.manchester.cs.hobo.demo.model.Travel"
			externalId="http://mekon/demo.owl#Travel">
		</ClassMap>
		<ClassMap
			javaClass="uk.ac.manchester.cs.hobo.demo.model.Trip"
			externalId="http://mekon/demo.owl#Trip"/>
		<ClassMap
			javaClass="uk.ac.manchester.cs.hobo.demo.model.summary.PropertyRef"
			externalId="http://mekon/demo.owl#refedInterContentProperty"/>
	</Mappings>

</HOBOModel>
