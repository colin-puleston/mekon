<?xml version="1.0" encoding="UTF-8"?>

<HOBOModel
	labelsFromDirectClasses="FALSE"
	labelsFromDirectFields="FALSE"
	queriesEnabled="TRUE">

	<!--
		Specification of types of reasoning-related update
		operations to be performed on instance-level frames.
	-->
	<InstanceUpdating
		autoUpdate="TRUE">
		<DefaultOperations
			inferredTypes="TRUE"
			suggestedTypes="TRUE"
			slots="TRUE"
			slotValues="TRUE"/>
	</InstanceUpdating>

	<!--
		Specification of Object Model - will load all classes
		that implement the DObject interface from specified
		package and any sub-packages.

		(Comment out this line to create frames-based model
		derived entirely from the ontology, with no associated
		Object Model.)
	-->
	<DirectModelSection topLevelPackage="uk.ac.manchester.cs.hobo.demo"/>

	<!--
		Specification of ontology to be loaded. Can be multiple such
		ontologies of various types. Specified via the plug-in
		class responsible for loading the ontology, plus "custom"
		configuration specific to the particular plug-in.

		Specified plug-in class is OBSectionBuilder which loads OWL
		ontologies via a "sanctioning" mechanism.
	-->
	<ModelSection
		builder="uk.ac.manchester.cs.mekon.owl.build.OBSectionBuilder">

		<!--
			Information concerning location of OWL ontology, type
			of DL reasoner to be used, and special property for
			representing numeric-values (as required by
			OBSectionBuilder and OCClassifier plug-in classes).
		-->
		<OWLModel
			owlFile="demo.owl"
			reasonerFactory="uk.ac.manchester.cs.factplusplus.owlapiv3.FaCTPlusPlusReasonerFactory"
			numericProperty="http://mekon/demo.owl#numericValue">
		</OWLModel>

		<!-- Reasoner options...
			reasonerFactory="org.semanticweb.owlapi.reasoner.structural.StructuralReasonerFactory"
			reasonerFactory="uk.ac.manchester.cs.factplusplus.owlapiv3.FaCTPlusPlusReasonerFactory"
			reasonerFactory="uk.ac.manchester.cs.jfact.JFactFactory"
			reasonerFactory="org.semanticweb.elk.owlapi.ElkReasonerFactory"
		-->

		<!--
			Configuration information for OCClassifier and OCMatcher
			plug-in classes that will create OWL expressions
			corresponding to the current states of the instance-level
			frames, which will then be classified in order to update
			the frames, or used to find sets of matching individuals.

			The semantics embodied by the generated expressions can be
			either OPEN_WORLD or CLOSED_WORLD, with exceptions provided
			for specific properties.

			LoggingMode specifies what logging information regarding
			OWL classification or matching operations will be written
			to standard out. Options are expressed via appropriate
			OCLoggingMode enum values (i.e. DISABLED, TIMES_ONLY or
			FULL)
		-->
		<OWLClassifier
			loggingMode="DISABLED">
			<SlotSemantics
				default="OPEN_WORLD">
				<ExceptionProperty uri="http://mekon/demo.owl#job"/>
			</SlotSemantics>
		</OWLClassifier>

		<OWLMatcher
			loggingMode="DISABLED">
			<SlotSemantics default="OPEN_WORLD"/>
		</OWLMatcher>

		<!--
			Configuration information for the actual "sanctioning"
			mechanism responsible for loading the OWL ontology into
			the HOBO frames structures.

			Concept hierarchies can be explicitly included, with the
			option to include the root-concept and/or descendant
			concepts of the hierarchy being specified via a an
			appropriate OBEntitySelection enum (see relevant Javadoc).
			If no explicit concept-inclusions are specified then
			all concepts in the ontology will be included. If no
			explicit concept-inclusions are specified then all
			concepts in the ontology will be included.

			Specifications of concept hierarchies can include
			specifications of which concepts are to be defined as
			"hidden". Definitions are expressed via appropriate
			OBEntitySelection and OBConceptHidingFilter enum values
			(see relevant Javadoc).

			Property hierarchies can be explicitly included via
			"PropertyInclusion" constructs, similar to the
			"ConceptInclusion" constructs but with no "hiding"
			definitions. If no explicit property-inclusions are
			specified then all properties in the ontology will be
			included.
		-->
		<OWLSanctionedModel
			metaFrameSlotsEnabled="TRUE"
			retainOnlyDeclarationAxioms="FALSE">
			<ConceptInclusion>
				<Group
					rootURI="http://mekon/demo.owl#DataTypeConcept"
					inclusion="ALL"/>
				<Group
					rootURI="http://mekon/demo.owl#DomainConcept"
					inclusion="ALL"
					conceptHidingCandidates="ALL"
					conceptHidingFilter="DEFINIED_SUB_TREES_ONLY"/>
			</ConceptInclusion>
			<PropertyInclusion>
				<Group
					rootURI="http://mekon/demo.owl#simpleObjectProperty"
					inclusion="NON_ROOTS_ONLY"/>
				<Group
					rootURI="http://mekon/demo.owl#referencableObjectProperty"
					inclusion="ALL"
					frameSources="TRUE"/>
			</PropertyInclusion>
		</OWLSanctionedModel>

	</ModelSection>

	<!--
		Mappings between Java classes/fields from the Object Model
		and classes/properties from the ontology.
	-->
	<Mappings>
		<ClassMap
			javaClass="uk.ac.manchester.cs.hobo.demo.Citizen"
			externalId="http://mekon/demo.owl#Citizen">
			<FieldMap fieldName="employment" externalId="http://mekon/demo.owl#employment"/>
			<FieldMap fieldName="tax" externalId="http://mekon/demo.owl#taxPaid"/>
			<FieldMap fieldName="benefits" externalId="http://mekon/demo.owl#benefitReceived"/>
		</ClassMap>
		<ClassMap
			javaClass="uk.ac.manchester.cs.hobo.demo.Employment"
			externalId="http://mekon/demo.owl#Employment">
			<FieldMap fieldName="jobs" externalId="http://mekon/demo.owl#job"/>
			<FieldMap fieldName="jobCount" externalId="http://mekon/demo.owl#jobCount"/>
		</ClassMap>
		<ClassMap
			javaClass="uk.ac.manchester.cs.hobo.demo.Job"
			externalId="http://mekon/demo.owl#Job">
			<FieldMap fieldName="hourlyPay" externalId="http://mekon/demo.owl#hourlyPay"/>
			<FieldMap fieldName="weeklyPay" externalId="http://mekon/demo.owl#weeklyPay"/>
			<FieldMap fieldName="hoursPerWeek" externalId="http://mekon/demo.owl#hoursPerWeek"/>
		</ClassMap>
		<ClassMap
			javaClass="uk.ac.manchester.cs.hobo.demo.CitizenAspect"
			externalId="http://mekon/demo.owl#CitizenAspect"/>
		<ClassMap
			javaClass="uk.ac.manchester.cs.hobo.demo.TravelAspect"
			externalId="http://mekon/demo.owl#TravelAspect"/>
		<ClassMap
			javaClass="uk.ac.manchester.cs.hobo.demo.Tax"
			externalId="http://mekon/demo.owl#Tax"/>
		<ClassMap
			javaClass="uk.ac.manchester.cs.hobo.demo.NonZeroTax"
			externalId="http://mekon/demo.owl#NonZeroTax"/>
		<ClassMap
			javaClass="uk.ac.manchester.cs.hobo.demo.Benefit"
			externalId="http://mekon/demo.owl#Benefit"/>
		<ClassMap
			javaClass="uk.ac.manchester.cs.hobo.demo.UnemploymentBenefit"
			externalId="http://mekon/demo.owl#UnemploymentBenefit"/>
		<ClassMap
			javaClass="uk.ac.manchester.cs.hobo.demo.TravelMode"
			externalId="http://mekon/demo.owl#TravelMode"/>
		<ClassMap
			javaClass="uk.ac.manchester.cs.hobo.demo.summary.PropertyRef"
			externalId="http://mekon/demo.owl#referencableObjectProperty"/>
	</Mappings>

</HOBOModel>
